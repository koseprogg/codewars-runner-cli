# BUILD-USING:    docker build -t codewars/runner-jvm .
# EXAMPLE USAGE:  (Hello world): docker run --rm --name=runner-jvm codewars/runner-jvm run -l java -c $'class Solution {\npublic static void main(String[] args){\nSystem.out.println("Hello world");\n}}'

# Pull base image.
FROM codewars/base-runner

# Needed to run add-apt-repository
RUN apt-get -y install software-properties-common

# Install Java 8
RUN apt-get -y install openjdk-8-jdk

# Install dependencies binaries
RUN mkdir -p /usr/local
WORKDIR /usr/local

# Install Gradle
ENV GRADLE_HOME /usr/local/gradle
ENV GRADLE_VERSION 6.0

RUN set -o errexit -o nounset \
	&& echo "Downloading Gradle" \
	&& wget --no-verbose --output-document=gradle.zip "https://services.gradle.org/distributions/gradle-${GRADLE_VERSION}-bin.zip" \
	&& echo "Installing Gradle" \
	&& unzip gradle.zip \
	&& rm gradle.zip \
	&& mv "gradle-${GRADLE_VERSION}" "${GRADLE_HOME}/" \
	&& ln --symbolic "${GRADLE_HOME}/bin/gradle" /usr/bin/gradle

RUN mkdir /usr/local/.gradle \
 && chown codewarrior /usr/local/.gradle


RUN ln -s /home/codewarrior /workspace
ENV NPM_CONFIG_LOGLEVEL warn

WORKDIR /runner
COPY package.json package.json
RUN npm install --production

COPY *.js ./
COPY lib/*.js lib/
COPY lib/*.sh lib/
COPY lib/utils lib/utils
COPY lib/runners/java.js lib/runners/
COPY examples/java.yml examples/
COPY test/runner.js test/
COPY test/runners/java_spec.js test/runners/
COPY frameworks/java/prewarm.sh prewarm.sh

COPY frameworks/java frameworks/java
RUN chown codewarrior frameworks/java
RUN gradle --version

COPY entrypoint.sh entrypoint.sh
RUN chmod +x entrypoint.sh

USER codewarrior
ENV USER=codewarrior HOME=/home/codewarrior

# pre-install the default referenced java libraries
RUN cd /runner/frameworks/java && gradle --stacktrace --no-daemon compileTestJava

RUN mocha -t 20000 test/runners/java_spec.js

ENTRYPOINT ["./entrypoint.sh"]
